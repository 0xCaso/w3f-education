"use strict";(self.webpackChunkpolkadot_mooc=self.webpackChunkpolkadot_mooc||[]).push([[5193],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(n),p=o,f=m["".concat(u,".").concat(p)]||m[p]||d[p]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9570:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={id:"introrust",sidebar_position:1},u="Rust for Blockchain Development",l={unversionedId:"introrust",id:"introrust",isDocsHomePage:!1,title:"Rust for Blockchain Development",description:"Developed by the Technical Education team at the Web3 Foundation, this course introduces programming in Rust for Blockchain applications.",source:"@site/docs/introrust.md",sourceDirName:".",slug:"/introrust",permalink:"/w3f-education/docs/introrust",editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/introrust.md",version:"current",lastUpdatedBy:"Radha",lastUpdatedAt:1664819319,formattedLastUpdatedAt:"10/3/2022",sidebarPosition:1,frontMatter:{id:"introrust",sidebar_position:1},sidebar:"rust",next:{title:"1. Rust Basics",permalink:"/w3f-education/docs/Rust/module1"}},c=[{value:"Module 1 - Rust Basics",id:"module-1---rust-basics",children:[]},{value:"Module 2 - What makes Rust Safe?",id:"module-2---what-makes-rust-safe",children:[]},{value:"Module 3 - Structs and Enums",id:"module-3---structs-and-enums",children:[]},{value:"Module 4 - Types and Collections",id:"module-4---types-and-collections",children:[]},{value:"Module 5 - Error Handling and Testing",id:"module-5---error-handling-and-testing",children:[]},{value:"Module 6 - Iterators, Closures, and Smart Pointers",id:"module-6---iterators-closures-and-smart-pointers",children:[]},{value:"Module 7 - Advanced Features",id:"module-7---advanced-features",children:[]},{value:"Module 8 - Web Assembly",id:"module-8---web-assembly",children:[]}],d={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rust-for-blockchain-development"},"Rust for Blockchain Development"),(0,a.kt)("p",null,"Developed by the Technical Education team at the Web3 Foundation, this course introduces programming in Rust for Blockchain applications."),(0,a.kt)("p",null,"This course is designed to teach the fundamentals of Rust to a student who is already fluent in at least one other programming language. This course provides a strong foundation in general purpose Rust, and also emphasizes some aspects of Rust (such as ","[no_std]",", anvanced Generics, and the RustWasm toolchain) that are particularly useful when developing with the Substrate blockchain framework."),(0,a.kt)("h2",{id:"module-1---rust-basics"},"Module 1 - Rust Basics"),(0,a.kt)("p",null,"Getting Started. Installation. A hello-world program in Rust. Cargo. A few simple Rust Programs. Variables. Data Types. Functions. Comments. Control Flow."),(0,a.kt)("h2",{id:"module-2---what-makes-rust-safe"},"Module 2 - What makes Rust Safe?"),(0,a.kt)("p",null,"Variable Scope. Memory management. How variables interact. References. Background on Programming Safety and why it is critical for Blockchain development. Substrate introduction."),(0,a.kt)("h2",{id:"module-3---structs-and-enums"},"Module 3 - Structs and Enums"),(0,a.kt)("p",null,"Structs. Enums. Methods. Packages and Crates.\nCargo feature - this will be important for the \u201cstd\u201d features all over Substrate. \u201cruntime-benchmarks\u201d and \u201ctry-runtime\u201d."),(0,a.kt)("h2",{id:"module-4---types-and-collections"},"Module 4 - Types and Collections"),(0,a.kt)("p",null,"Vectors. Hashmaps. More on Strings. Generic types. Traits and shared behaviour."),(0,a.kt)("h2",{id:"module-5---error-handling-and-testing"},"Module 5 - Error Handling and Testing"),(0,a.kt)("p",null,"To Panic or not to Panic. Writing automated tests. Substrate's own OOM and panic implementations. And recreate the infamous \u201cduplicate lang item\u201d error."),(0,a.kt)("h2",{id:"module-6---iterators-closures-and-smart-pointers"},"Module 6 - Iterators, Closures, and Smart Pointers"),(0,a.kt)("p",null,"Iterators vs Loops. Closures. Smart Pointers. "),(0,a.kt)("h2",{id:"module-7---advanced-features"},"Module 7 - Advanced Features"),(0,a.kt)("p",null,"Generics vs dynamic dispatch. Conflicting type names. Associated types."),(0,a.kt)("h2",{id:"module-8---web-assembly"},"Module 8 - Web Assembly"),(0,a.kt)("p",null,"A little core info about what wasm is and why it is valuable. The rust-wasm toolchain. How to add a target with rustup. How to cross compile to the new target. How to execute a wasm binary from within Rust (this is How the runtime is executed). How to package for the browser - Not directly Substrate related, but very cool, and very useful."))}m.isMDXComponent=!0}}]);