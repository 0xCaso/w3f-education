"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[9513],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1807:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),s=["components"],o={id:"wasm-tldr",title:"WASM TLDR - What is WASM, and why is it important?",sidebar_label:"WASM TLDR",description:"Why WASM is used, and it's support in Rust."},c=void 0,l={unversionedId:"Rust/section1/wasm-tldr",id:"Rust/section1/wasm-tldr",isDocsHomePage:!1,title:"WASM TLDR - What is WASM, and why is it important?",description:"Why WASM is used, and it's support in Rust.",source:"@site/docs/Rust/section1/wasm-tldr.md",sourceDirName:"Rust/section1",slug:"/Rust/section1/wasm-tldr",permalink:"/w3f-education/docs/Rust/section1/wasm-tldr",editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Rust/section1/wasm-tldr.md",version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1681224789,formattedLastUpdatedAt:"4/11/2023",frontMatter:{id:"wasm-tldr",title:"WASM TLDR - What is WASM, and why is it important?",sidebar_label:"WASM TLDR",description:"Why WASM is used, and it's support in Rust."},sidebar:"rust",previous:{title:"Why Learn Rust?",permalink:"/w3f-education/docs/Rust/section1/why-rust"},next:{title:"Installing & Setting up a Rust Developer Environment",permalink:"/w3f-education/docs/Rust/setup/installation"}},u=[{value:"Basic Wasm Architecture",id:"basic-wasm-architecture",children:[]},{value:"Wasm Usecases",id:"wasm-usecases",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"WebAssembly (Wasm) is becoming a core part of many technology stacks.  It is a portable target for higher-level languages to compile to and has no direct limitations on where it can run (although it is mostly browser focused at the moment).  It can run at near-native speeds and provides a sandboxed, agnostic set of instructions to run in any environment that supports it."),(0,i.kt)("p",null,"Wasm has two common formats, ",(0,i.kt)("inlineCode",{parentName:"p"},"wat")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"wasm"),".  "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".wat")," - a text-based format, called WebAssembly Text, that is a more human readable way of representing Wasm instructions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".wasm")," - a binary-based format that defines an executable that is then executed by a Wasm virtual machine.")),(0,i.kt)("p",null,"WebAssembly, while not exclusive to Rust by any means, is highly supported in Rust.  This enables Rust code to be even more portable in the context of web-based applications (or any environment that supports WebAssembly)."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Fun fact : Heard of ",(0,i.kt)("strong",{parentName:"p"},"forkless upgrades")," on Polkadot? It is Wasm that enables these seamless blockchain upgrades. Each instance of the Polkadot Runtime compiles to a Wasm blob and is stored in the blockchain's storage, which can be replaced through an on-chain governance based upgrade. "))),(0,i.kt)("h2",{id:"basic-wasm-architecture"},"Basic Wasm Architecture"),(0,i.kt)("p",null,"At its core, Wasm is a stack-based virtual machine, where each value is popped and pushed on an arbitrary stack. It is worth noting that Wasm is not a ",(0,i.kt)("em",{parentName:"p"},"register")," machine, as it contains no context-specific registers for bytes to be held."),(0,i.kt)("h2",{id:"wasm-usecases"},"Wasm Usecases"),(0,i.kt)("p",null,"On Polkadot, Web3 Foundation's flagship project, Wasm is a core part of the technology stack:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It defines reliable state transition functions for the ",(0,i.kt)("a",{parentName:"li",href:"https://wiki.polkadot.network/docs/appendix#runtime"},"relay chain runtimes"),"."),(0,i.kt)("li",{parentName:"ul"},"It defines ",(0,i.kt)("a",{parentName:"li",href:"https://wiki.polkadot.network/docs/learn-parachains-protocol"},"Parachain Validation Functions (PVFs)"),", which is a core part of how relay and parachains agree on their respective state."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"https://use.ink/"},"ink!")," smart contract language compiles to Wasm, which takes full advantage of the sandboxed and portable nature of Wasm.")))}d.isMDXComponent=!0}}]);